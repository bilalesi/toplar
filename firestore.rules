rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isSameUser(userId) {
      return request.auth.uid == userId;
    }

    function isUserActive() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.active == true;
    }

    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isUserRoleClient() {
      return isSignedIn() && getUserRole() == 'client';
    }

    function isUserRoleRealtor() {
      return isSignedIn() && getUserRole() == 'realtor';
    }

    function isUserRoleAdmin() {
      return isSignedIn() && getUserRole() == 'admin';
    }

    match /{document=**} {
      allow read, write: if isUserRoleAdmin() && isUserActive();
    }

    match /users/{userId} {
      allow list: if false;
      allow get: if isSameUser(userId) || resource.data.active == true;
      allow create: if isSameUser(userId) && request.resource.data.role == 'client' && request.resource.data.active == true;
      allow update: if isSameUser(userId) && isUserActive() && request.resource.data.role == resource.data.role && request.resource.data.active == resource.data.active;
      allow delete: if false;
    }

    match /properties/{propertyId} {
      allow read: if isUserActive() && isUserRoleRealtor() || isUserActive() && isUserRoleClient() && resource.data.available == true;
      allow write: if isUserActive() && isUserRoleRealtor();
    }
  }
}
